#!/usr/bin/env bash

#------------------------------------------------------------------------------
# Path         - /usr/bin/cmusfetcher500
# GitHub       - https://github.com/The-Repo-Club/
# Author       - The-Repo-Club [wayne6324@gmail.com]
# Start On     - Tue 28 Dec 13:11:42 GMT 2021
# Modified On  - Tue 28 Dec 13:11:42 GMT 2021
#------------------------------------------------------------------------------

## Set Colors (copied from makepkg)
ALL_OFF="\e[1;0m"
RED="\e[1;31m"
GREEN="\e[1;32m"
YELLOW="\e[1;33m"
BLUE="\e[1;34m"
PURPLE="\e[1:35m"
CYAN="\e[1:36m"

COLS="$(tput cols)"

readonly ALL_OFF BOLD RED GREEN YELLOW BLUE PURPLE CYAN COL

#=== FUNCTION =================================================================
#        Name: error
# Description: Print message with a red pretag an ERROR
# Parameter 1: Message to print
#==============================================================================

# copied from makepkg
error() {
    local mesg=$1; shift
    printf "${RED}==> ERROR:${ALL_OFF} %s${ALL_OFF}\n" "$mesg" "$@" >&2

}

while read -r Line; do
    if [[ "${Line}" -gt 1 ]]; then
        error "Can not run more then one instance."
        exit 0
    fi
done <<< $( pgrep -cf ${0##*/} )

for terminal in "$TERMINAL" x-terminal-emulator mate-terminal gnome-terminal terminator xfce4-terminal urxvt rxvt termit Eterm aterm uxterm xterm roxterm termite lxterminal terminology st qterminal lilyterm tilix terminix konsole kitty guake tilda alacritty hyper; do
    if command -v "$terminal" > /dev/null 2>&1; then
        runCmd=$terminal
    fi
done

md2=""
player=""
# Initialising dir
if [[ -d /tmp/art ]]; then
    rm -r /tmp/art
    mkdir -p /tmp/art/
else
    mkdir -p /tmp/art/
fi

# Setting file variable
while true; do
    if pidof -x "cmus" > /dev/null; then
        while read -r; do
            F1=${REPLY%% *}
            F2=${REPLY#* }

            if [[ $F1 =~ 'status' ]]; then
                if [[ ! $F2 =~ 'playing' ]]; then
                    if pidof -x "CmusImage" > /dev/null; then
                        pkill -f CmusImage
                        rm -r /tmp/art/art.jpeg
                        md2=""
                    fi
                    playing=0
                else
                    playing=1
                fi
            fi

            if [[ $F1 =~ 'file' ]] && [[ "$playing" -eq 1 ]]; then
                ffmpeg -y -i "$F2" /tmp/art/art.jpeg &> /dev/null
                md1=$(md5sum "/tmp/art/art.jpeg")
                if [ "$md1" != "$md2" ] ; then
                    if ! pidof -x "CmusImage" > /dev/null; then
                        bash -c "exec -a CmusImage feh --reload 1 -g 250x250+1670+830 -x --scale-down --image-bg black /tmp/art/art.jpeg &"
                        bash -c "exec -a CmusImage "$runCmd" -e cava &"

                    fi
                    md2=${md1}
                fi
            fi
        done <<< $( cmus-remote -Q )
        sleep 5s
    else
        echo "Please connect cmus"
        if pidof -x "CmusImage" > /dev/null; then
            pkill -f CmusImage
            rm -r /tmp/art/art.jpeg
        fi
        sleep 5s
    fi
done
